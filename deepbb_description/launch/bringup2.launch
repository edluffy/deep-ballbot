<?xml version="1.0" ?>
<launch>

  <arg name="robot_sim" default="true"/>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false" />

  <!-- Global -->
  <!-- Load the URDF to the parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find deepbb_description)/urdf/deep_ballbot.xacro" />

  <!-- merge joint states and publish as /joint_states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <!-- listens to each part -->
    <rosparam param="source_list">[deep_ballbot/joint_states]</rosparam>
  </node>

  <!-- Convert joint states to /tf tranforms -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Load all available controllers -->
  <rosparam command="load" file="$(find deepbb_description)/config/deepbb_controller.yaml" />

  <!-- SIM STUFF-->
  <group if="$(arg robot_sim)">

    <!-- Load simulation environment -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <!--<arg name="world_name" value="$(find deepbb_gazebo)/worlds/deepbb.world"/>-->
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- (Load hardware interface sim) Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false"
        output="screen"  args="-urdf -model deep_ballbot -param robot_description"/>

  </group>

  <group ns="deep_ballbot">
    <!-- Load a copy of the URDF within the namespace-->
    <param name="robot_description" command="$(find xacro)/xacro $(find deepbb_description)/urdf/deep_ballbot.xacro" />

    <!-- HARDWARE STUFF-->
    <group unless="$(arg robot_sim)">

      <!-- Load hardware interface real -->
      <node name="deepbb_hardware_interface" pkg="deepbb_hardware_interface"
          type="deepbb_hardware_interface_node" output="screen"/>

    </group>

    <!-- Load controller manager -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
      args="joint_state_controller Motor1_torque_controller Motor2_torque_controller Motor3_torque_controller"/>

  </group>

</launch>
